---
title: "tidymodels for time-to-event data"
subtitle: "posit::conf 2024"
author: "Hannah Frick, Posit"
format:
  revealjs: 
    slide-number: true
    show-slide-number: all
    footer: <https://hfrick.github.io/2024-posit-conf>
    theme: [default, style.scss]
    css: styles.css
    highlight-style: a11y
    width: 1280
    height: 720
knitr:
  opts_chunk: 
    echo: true
    collapse: true
    comment: "#>"
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
library(tidymodels)
library(censored)

options(width = 70)

theme_set(theme_minimal(base_size = 20))
```

##

![](images/collab-figures-thinking.png){.absolute top="80" left="40" width="600"} 

. . . 

![](images/collab-figures-talking.png){.absolute top="80" left="700" width="600"} 

:::{.notes}

- two questions
- rebrand
- broad application
- all models are wrong
- tailor-made
- build intuition
- tidymodels
- toolbox

:::


# How long is somebody going to stay as a customer?

## What if we just use the time?

<!-- <br> -->

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/time-only.png")
```

. . . 

That time is _observation time_, not _time to event_.

## What we actually have

<!-- <br> -->

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/time-to-event.png")
```

:::{.notes}
- introduce censoring
:::


## What if we just use the time?

<!-- <br> -->

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/everything-as-event.png")
```

If we assume that's time-to-event, _we assume everything is an event_.

::: {.notes}
- using censored obs as events underestimates the survival time
:::

## ... discard the censored observations?

<!-- <br> -->

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/discard-censored.png")
```

::: {.notes}
- discarding censored obs also biases the results
- wait until we observe everything? not always possible (dropout of study)
:::

# Who is likely to stop being a customer?

## What if we just use the event status?

<!-- <br> -->

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/event-status-only.png")
```

. . .

Who is likely to stop being a customer _while we observe them?_

## Our challenge

- Our outcome has two aspects: time and event status.

- Our outcome may be censored: incomplete data is not missing data.

. . .

Regression and classification are not directly equipped to deal with either challenge.

:::{.notes}
- all models are wrong etc
- not scolding but inviting to use methods tailored to this problem
:::

## Survival analysis to the rescue

<br><br>

> Survival analysis is unique because it simultaneously considers _if_ events happened (i.e. a binary outcome) and _when_ events happened (e.g. a continuous outcome).[^1]

[^1]: Denfeld QE, Burger D, Lee CS (2023) _Survival analysis 101: an easy start guide to analysing time-to-event data_. European Journal of Cardiovascular Nursing, Volume 22, Issue 3, Pages 332â€“337, <https://doi.org/10.1093/eurjcn/zvad023>



## Let's try time windows

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/time-aligned.png")
```


## Let's try time windows

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/time-window-1.png")
```

## Let's try time windows

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/time-window-2.png")
```


## Probability over time

```{r}
#| echo: false
#| fig-align: "center"
#| out.height: 80%

knitr::include_graphics("images/survival-curve.png")
```

## Two central ideas of survival analysis

- Model the survival curve (or derivatives) to capture time and event status.

- Censored observations are partially included, rather than discarded.





# Show me some code! 

<!-- ![](images/hex/tidymodels.png) -->


## Customer churn

```{r}
#| eval: false
wa_churn
```

```{r}
#| echo: false
data("wa_churn", package = "modeldata")

wa_churn <- wa_churn %>%
  drop_na() %>%
  mutate(
    multiple_lines = if_else(multiple_lines == "No phone service", "No", multiple_lines),
    across(all_of(c("online_security", "online_backup",
                    "device_protection", "tech_support", "streaming_tv", 
                    "streaming_movies")), 
           ~ if_else(.x == "No internet service", "No", .x))
  ) %>% 
  select(-contract, -total_charges) %>%
  relocate(tenure, churn)

print(wa_churn, n = 6)
```

## Customer churn

```{r}
library(tidymodels)
library(censored)

telco_churn <- wa_churn %>% 
  mutate(
    churn_surv = Surv(tenure, if_else(churn == "Yes", 1, 0)),
    .keep = "unused"
  )
```

::: {.notes}
- Surv = response
- modify response outside of recipes
:::

## Split the data

```{r}
#| code-line-numbers: "1-2|4-5"
set.seed(403)
telco_split <- initial_split(telco_churn)

telco_train <- training(telco_split)
telco_test <- testing(telco_split)
```

## A single model

```{r}
#| code-line-numbers: "1-2|4-6|8-10|12"
telco_rec <- recipe(churn_surv ~ ., data = telco_train) %>% 
  step_zv(all_predictors()) 

telco_spec <- proportional_hazards() %>%
  set_mode("censored regression") %>%
  set_engine("survival")

telco_wflow <- workflow() %>%
  add_recipe(telco_rec) %>%
  add_model(telco_spec)

telco_fit <- fit(telco_wflow, data = telco_train)
```

## How long is somebody going to stay as a customer?

```{r}
predict(telco_fit, new_data = telco_train[1:5, ], type = "time")
```

## Who is likely to stop being a customer?

```{r}
pred_survival <- predict(telco_fit, new_data = telco_train[1:5, ], 
                         type = "survival", eval_time = 1:24)

pred_survival
```

## Who is likely to stop being a customer?

```{r}
pred_survival$.pred[[1]]
```

## Individual survival curves

```{r}
#| echo: false
#| fig-height: 4
#| fig-width: 6
#| fig-align: center

pred_survival %>% 
  add_rowindex() %>% 
  tidyr::unnest(cols = .pred) %>% 
  ggplot(aes(x = .eval_time, y = .pred_survival, group = .row)) +
  geom_step() +
  theme_bw()
```

## tidymodels for time-to-event data 

::: {.incremental}

- [Models](https://censored.tidymodels.org/#available-models-engines-and-prediction-types):  
  parametric, semi-parametric, and tree-based
- [Predictions](https://censored.tidymodels.org/#available-models-engines-and-prediction-types):  
  survival time, survival probability, hazard, and linear predictor
- [Metrics](https://yardstick.tidymodels.org/reference/index.html#dynamic-survival-metrics):  
  <MAX'S TALK>
  <!-- concordance index, Brier score, integrated Brier score, AUC ROC -->

:::

---

::: {.r-fit-text}
tidymodels for time-to-event data
:::

. . .

![](images/hex/parsnip.png){.absolute top="200" left="550" width="150"} 
![](images/hex/censored.png){.absolute top="333" left="626" width="150"} 
![](images/hex/yardstick.png){.absolute top="200" left="800" width="150"} 

. . .

![](images/hex/rsample.png){.absolute top="200" left="0" width="150"} 
![](images/hex/recipes.png){.absolute top="200" left="250" width="150"} 
![](images/hex/workflows.png){.absolute top="200" left="400" width="150"} 
![](images/hex/tune.png){.absolute top="200" left="1050" width="150"} 

. . .

<!-- + 133 down and + 76 to the left -->
![](images/hex/spatialsample.png){.absolute top="333" left="76" width="150"} 

![](images/hex/textrecipes.png){.absolute top="333" left="326" width="150"} 
![](images/hex/embed.png){.absolute top="466" left="250" width="150"} 

![](images/hex/finetune.png){.absolute top="333" left="1126" width="150"} 

![](images/hex/butcher.png){.absolute top="470" left="450" width="150"} 

. . .

![](images/hex/tidymodels.png){.absolute top="400" left="825" width="250"} 


# {background-color="#89CC04"} {visibility="hidden"}
<center>
[tidymodels.org]{style="font-size:2.5em;font-family: Arial;"}
</center>

# {background-color="#CA225E"} {visibility="hidden"}

<center>
[tidymodels.org]{style="font-size:2.5em;"}
</center>